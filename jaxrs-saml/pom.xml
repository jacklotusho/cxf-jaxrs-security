<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>cxf.tutorials.jaxrs.security.saml</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>Root POM for JAX-RS security</name>
    <packaging>pom</packaging>

    <modules>
        <module>sts</module>
        <module>jaxrs-bookstore</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <cxf.version>3.1.9</cxf.version>
        <spring.version>4.3.5.RELEASE</spring.version>
        <slf4j.version>1.7.7</slf4j.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <!--downloadJavadocs>true</downloadJavadocs-->
                    <useProjectReferences>true</useProjectReferences>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- Below plugin provides a separate JAR for the JAX-WS artifacts 
                     (i.e., the objects created by running wsdl2java or wsimport), as this JAR 
                     will also be used by the SOAP client for each web service provider using this plugin. 
                     More info: http://maven.apache.org/plugins/maven-assembly-plugin/ 
                -->

                <!-- 
                  For Tomcat 7 and 8, both embedded (tomcat7:run-war) and standalone
                  deployment - tomcat7:deploy/undeploy/redeploy 

                  How to configure Maven and Tomcat to use below plugin:
                  http://web-gmazza.rhcloud.com/blog/entry/web-service-tutorial#maventomcat
                --> 
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.2</version>
                    <configuration>
                        <server>myTomcat</server>
                        <url>http://localhost:8080/manager/text</url>
                        <path>/${project.build.finalName}</path>
                        <httpsPort>8443</httpsPort>
                        <keystoreFile>${basedir}/src/main/resources/localhost.jks</keystoreFile>
                        <aliases>localhost (certificate authorization root)</aliases>
                        <keystorePass>Passw0rd</keystorePass>
                    </configuration>
                </plugin>
                <!-- Below for WAR submodules, defaults for when creating the WAR file. --> 
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
